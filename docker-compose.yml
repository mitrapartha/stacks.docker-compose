version: "3.4"

## Adding Network
#networks:
#  mynetwork:
#  ${COMPOSE_PROJECT_NAME}:
#    name: ${COMPOSE_PROJECT_NAME}
#    driver: bridge  

services:

## Commenting out mariadb as it is not used in server, can be used in local
#  mariadb:
#    networks:
#     - ${COMPOSE_PROJECT_NAME}
#    container_name: "${COMPOSE_PROJECT_NAME}_mariadb"
#    image: mariadb:10.8
#    ports:
#      - "3306:3306"
#    volumes:
#      - mariadb_data:/var/lib/mysql
#      - ./logs/mysql:/var/log/mysql
#    environment:
#      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PSWD}
#      MYSQL_DATABASE: ${DB_NAME}
#      MYSQL_USER: ${DB_USER_NAME}
#      MYSQL_PASSWORD: ${DB_USER_PSWD}
#    command: --max_allowed_packet=1G

## Commenting out redis as it is not used in server. Uncomment if using in local
#  redis:
##    networks:
##     - ${COMPOSE_PROJECT_NAME}  
#    container_name: "${COMPOSE_PROJECT_NAME}_redis"   
#    image: redis:6.2-alpine
## Commenting out exposed ports for server security, can be used in local
##    ports:
##      - "6379:6379"
#    volumes:
#      - redis_data:/data
#    command: "redis-server --requirepass ${REDIS_PSWD}"

## Commenting out redis-commander as it is not used in server. Uncomment if using in local
#  redis-commander:
##    networks:
##     - ${COMPOSE_PROJECT_NAME}
#    container_name: "${COMPOSE_PROJECT_NAME}_redis-commander"
#    hostname: redis-commander
#    image: rediscommander/redis-commander:latest
#    restart: always
#    environment:
#      REDIS_HOSTS: redis
#      REDIS_HOST: redis
#      REDIS_PORT: redis:6379
#      REDIS_PASSWORD: "${REDIS_PSWD}"
#    ports:
#      - "8082:8081"
#    depends_on:
#      - redis

  stage-server:
    container_name: "${COMPOSE_PROJECT_NAME}_phpserver"
    build:
      dockerfile: ./.docker/builds/phpserver/Dockerfile
      context: .
    ports:
      - "${APP_EXPOSED_PORT}:80"
#      - "443:443"
    volumes:
#      - ${PROJECT_FOLDER}:/var/www/html
#      - ${GIT_KEY}:/var/www/git-keys
      - ./.docker/builds/phpserver/sites-enabled:/etc/apache2/sites-enabled
      - ./.docker/builds/phpserver/php.ini:/usr/local/etc/php/php.ini
      - ./.docker/builds/phpserver/opcache.ini:/usr/local/etc/php/conf.d/opcache.ini
      - ./.docker/builds/phpserver/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
#      - ./logs:/var/log
## Commenting out mariadb and redis as it is not used in server. Uncomment if using them in local
#    depends_on:
#      - mariadb
#      - redis
    user: "1000:1000"
    restart: always

## Commenting out phpmyadmin as it is not used in server, can be used in local
#  phpmyadmin:
#    networks:
#     - ${COMPOSE_PROJECT_NAME}
#    container_name: "${COMPOSE_PROJECT_NAME}_phpmyadmin"
#    image: phpmyadmin/phpmyadmin:5.1
#    ports:
#      - "8081:80"
#    environment:
#      PMA_HOST: ${DB_HOST}
#      PMA_USER: ${DB_USER_NAME}
#      PMA_PASSWORD: ${DB_USER_PSWD}
#    depends_on:
#      - mariadb

#  mailhog:
#    networks:
#     - ${COMPOSE_PROJECT_NAME}
#    image: mailhog/mailhog:v1.0.1
#    ports:
#      - 1025:1025
#      - 8025:8025

# volumes:

## Activate the _git_keys and _projectfles only if needed in local
#  git_keys:
#    name: "${COMPOSE_PROJECT_NAME}_git_keys"
#    driver: local

#  project_files:
#    name: "${COMPOSE_PROJECT_NAME}_projectfiles"
#    driver: local
#
## Commenting out mariadb as it is not used in server. Uncomment if using mariadb in docker
#  mariadb_data:
#    name: "${COMPOSE_PROJECT_NAME}_mariadb_data"
#    driver: local
#
#  redis_data:
#    name: "${COMPOSE_PROJECT_NAME}_redis_data"
#    driver: local
